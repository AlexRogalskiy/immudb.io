(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{260:function(e,t,a){"use strict";a.r(t);var i=a(28),n=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("immudb is a "),a("strong",[e._v("lightweight, high-speed immutable database")]),e._v(" for systems and applications. Written in Go.\nWith immudb you can track changes in sensitive data in your transactional databases and then record those changes permanently in a\ntamperproof immudb database. This allows you to keep an indelible history of sensitive data, for example debit/credit card transactions.\n"),a("img",{attrs:{align:"right",src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-mascot-small.png",width:"256px"}})]),e._v(" "),a("p",[e._v("Traditional transaction logs are hard to scale and are mutable. So there is no way to know for sure if your data has been compromised.")]),e._v(" "),a("p",[e._v("As such, immudb provides "),a("strong",[e._v("unparalleled insights")]),e._v(" "),a("strong",[e._v("retroactively")]),e._v(" of changes to your sensitive data, even\nif your perimeter has been compromised. immudb guarantees immutability by using a "),a("strong",[e._v("Merkle tree structure")]),e._v(" internally.")]),e._v(" "),a("p",[e._v("immudb gives you the same "),a("strong",[e._v("cryptographic verification")]),e._v(" of the integrity of data written with "),a("strong",[e._v("SHA-256")]),e._v(" like a classic blockchain without the cost and complexity associated with blockchains today.")]),e._v(" "),a("p",[e._v("immudb has 4 main benefits:")]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("immudb is immutable")]),e._v(". You can add records, but "),a("strong",[e._v("never change or delete records")]),e._v(".")]),e._v(" "),a("li",[e._v("Data stored in immudb is "),a("strong",[e._v("cryptographically coherent and verifiable")]),e._v(", like blockchains, just without all the complexity and at high speed.")]),e._v(" "),a("li",[e._v("Anyone can get "),a("strong",[e._v("started with immudb in minutes")]),e._v(". Whether you're using node.js, Java, Python, Golang, .Net, or any other language. It's very easy to use and you can have your immutable database running in just a few minutes.")]),e._v(" "),a("li",[e._v("Finally, immudb is  "),a("strong",[e._v("Open Source")]),e._v(". You can run it "),a("strong",[e._v("on premise")]),e._v(", or in the "),a("strong",[e._v("cloud")]),e._v(". It's completely free. immudb is governed by the Apache 2.0 License.")])]),e._v(" "),a("p",[e._v("immudb can be ran on "),a("strong",[e._v("Linux")]),e._v(", "),a("strong",[e._v("FreeBSD")]),e._v(", "),a("strong",[e._v("Windows")]),e._v(", and "),a("strong",[e._v("MacOS")]),e._v(", along with\nother systems derived from them, such as "),a("strong",[e._v("Kubernetes")]),e._v(" and "),a("strong",[e._v("Docker")]),e._v(".")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://twitter.com/intent/tweet?text=immudb:%20lightweight,%20high-speed%20immutable%20database!&url=https://github.com/codenotary/immudb",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Tweet%20about%20immudb",alt:"Tweet aboutimmudb!"}}),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#quickstart"}},[e._v("Quickstart")]),e._v(" - How to try it now on your systems, get a Docker container running in seconds")]),e._v(" "),a("li",[a("a",{attrs:{href:"#components"}},[e._v("Components")]),e._v(" - immudb component overview")]),e._v(" "),a("li",[a("a",{attrs:{href:"#build-the-binaries"}},[e._v("Build the binaries")]),e._v(" - How to build the different component binaries")]),e._v(" "),a("li",[a("a",{attrs:{href:"#immudb-first-start"}},[e._v("immudb first start")]),e._v(" - Start immudb")]),e._v(" "),a("li",[a("a",{attrs:{href:"#command-reference"}},[e._v("Command reference")]),e._v(" - Command reference of the components")]),e._v(" "),a("li",[a("a",{attrs:{href:"#docker"}},[e._v("Docker")]),e._v(" - Use docker container to run immudb")]),e._v(" "),a("li",[a("a",{attrs:{href:"#how-immudb-works"}},[e._v("How immudb works")]),e._v(" - How does immudb work internally")]),e._v(" "),a("li",[a("a",{attrs:{href:"#apis-and-interfaces"}},[e._v("APIs and interfaces")]),e._v(" - API reference and code examples")])]),e._v(" "),a("h2",{attrs:{id:"quickstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quickstart"}},[e._v("#")]),e._v(" Quickstart")]),e._v(" "),a("h3",{attrs:{id:"components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#components"}},[e._v("#")]),e._v(" Components")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("immudb")]),e._v(" is the server binary that listens on port 3322 on localhost and provides a gRPC interface")]),e._v(" "),a("li",[a("strong",[e._v("immugw")]),e._v(" is the intelligent REST proxy that connects to immudb and provides a RESTful interface for applications. We recommend to run immudb and immugw on separate machines to enhance security")]),e._v(" "),a("li",[a("strong",[e._v("immuadmin")]),e._v(" is the admin CLI for immudb and immugw. You can install and manage the service installation for both components and get statistics as well as runtime information.")]),e._v(" "),a("li",[a("strong",[e._v("immuclient")]),e._v(" is the CLI client for immudb. You can read, write data into immudb from the commandline using direct or interactive mode.")])]),e._v(" "),a("p",[e._v("The latest release binaries can be found "),a("a",{attrs:{href:"https://github.com/codenotary/immudb/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"build-the-binaries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-the-binaries"}},[e._v("#")]),e._v(" Build the binaries")]),e._v(" "),a("p",[e._v("To build the binaries yourself, simply clone this repo and run")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("make all\n")])])]),a("h4",{attrs:{id:"linux-by-component"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-by-component"}},[e._v("#")]),e._v(" Linux (by component)")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("linux "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),a("h4",{attrs:{id:"macos-by-component"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos-by-component"}},[e._v("#")]),e._v(" MacOS (by component)")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("darwin "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),a("h4",{attrs:{id:"windows-by-component"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-by-component"}},[e._v("#")]),e._v(" Windows (by component)")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("windows "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),a("h3",{attrs:{id:"immudb-first-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immudb-first-start"}},[e._v("#")]),e._v(" immudb first start")]),e._v(" "),a("h4",{attrs:{id:"run-immudb-binary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb-binary"}},[e._v("#")]),e._v(" Run immudb binary")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# run immudb in the foreground")]),e._v("\n./immudb\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# run immudb in the background")]),e._v("\n./immudb -d\n")])])]),a("h4",{attrs:{id:"run-immudb-as-a-service-using-immuadmin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb-as-a-service-using-immuadmin"}},[e._v("#")]),e._v(" Run immudb as a service (using immuadmin)")]),e._v(" "),a("p",[e._v("Please make sure to build or download the immudb and immuadmin component and save them in the same work directory when installing the service.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# install immudb service\n./immuadmin service immudb install\n\n# check current immudb service status\n./immuadmin service immudb status\n\n# stop immudb service\n./immuadmin service immudb stop\n\n# start immudb service\n./immuadmin service immudb start\n")])])]),a("p",[e._v("The linux service is using the following defaults:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("File or configuration")]),e._v(" "),a("th",[e._v("location")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("all configuration files")]),e._v(" "),a("td",[e._v("/etc/immudb")])]),e._v(" "),a("tr",[a("td",[e._v("all data files")]),e._v(" "),a("td",[e._v("/var/lib/immudb")])]),e._v(" "),a("tr",[a("td",[e._v("pid file")]),e._v(" "),a("td",[e._v("/var/run/immdb.pid")])]),e._v(" "),a("tr",[a("td",[e._v("log files")]),e._v(" "),a("td",[e._v("/var/log/immudb")])])])]),e._v(" "),a("h4",{attrs:{id:"run-immugw-as-a-service-using-immuadmin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw-as-a-service-using-immuadmin"}},[e._v("#")]),e._v(" Run immugw as a service (using immuadmin)")]),e._v(" "),a("p",[e._v("Please make sure to build or download the immugw and immuadmin component and save them in the same work directory when installing the service.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# install immugw service\n./immuadmin service immugw install\n\n# check current immugw service status\n./immuadmin service immugw status\n\n# stop immugw service\n./immuadmin service immugw stop\n\n# start immugw service\n./immuadmin service immugw start\n")])])]),a("p",[e._v("The linux service is using the following defaults:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("File or configuration")]),e._v(" "),a("th",[e._v("location")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("all configuration files")]),e._v(" "),a("td",[e._v("/etc/immudb")])]),e._v(" "),a("tr",[a("td",[e._v("pid file")]),e._v(" "),a("td",[e._v("/var/run/immgw.pid")])]),e._v(" "),a("tr",[a("td",[e._v("log files")]),e._v(" "),a("td",[e._v("/var/log/immudb")])])])]),e._v(" "),a("h3",{attrs:{id:"command-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-reference"}},[e._v("#")]),e._v(" Command reference")]),e._v(" "),a("h4",{attrs:{id:"immudb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immudb"}},[e._v("#")]),e._v(" immudb")]),e._v(" "),a("p",[e._v("Simply run "),a("code",[e._v("./immudb -d")]),e._v(" to start immudb locally in the background.")]),e._v(" "),a("p",[e._v("If you want to stop immudb în that case you need to find the process "),a("code",[e._v("ps -ax | grep immudb")]),e._v(" and then "),a("code",[e._v("kill -15 <pid>")]),e._v(". Windows PowerShell would be "),a("code",[e._v("Get-Process immudb* | Stop-Process")]),e._v(".")]),e._v(" "),a("p",[e._v("immudb is launched by default with a security routine called "),a("RouterLink",{attrs:{to:"/docs/immudb/consistency-checker.html"}},[e._v("consistency checker")]),e._v(" . This solution provides a continuosly corruption check on data stored on server storage.")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('immudb - the lightweight, high-speed immutable database for systems and applications.\n\nEnvironment variables:\n  IMMUDB_DIR=.\n  IMMUDB_NETWORK=tcp\n  IMMUDB_ADDRESS=127.0.0.1\n  IMMUDB_PORT=3322\n  IMMUDB_DBNAME=immudb\n  IMMUDB_PIDFILE=\n  IMMUDB_LOGFILE=\n  IMMUDB_MTLS=false\n  IMMUDB_AUTH=false\n  IMMUDB_DETACHED=false\n  IMMUDB_CONSISTENCY-CHECK=true\n  IMMUDB_PKEY=./tools/mtls/3_application/private/localhost.key.pem\n  IMMUDB_CERTIFICATE=./tools/mtls/3_application/certs/localhost.cert.pem\n  IMMUDB_CLIENTCAS=./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immudb [flags]\n  immudb [command]\n\nAvailable Commands:\n  help        Help about any command\n  version     Show the immudb version\n\nFlags:\n  -a, --address string       bind address (default "127.0.0.1")\n  -s, --auth                 enable auth\n      --certificate string   server certificate file path (default "./tools/mtls/3_application/certs/localhost.cert.pem")\n      --clientcas string     clients certificates list. Aka certificate authority (default "./tools/mtls/2_intermediate/certs/ca-chain.cert.pem")\n      --config string        config file (default path are configs or $HOME. Default filename is immudb.ini)\n      --consistency-check    enable consistency check monitor routine. To disable: --consistency-check=false (default true)\n  -n, --dbname string        db name (default "immudb")\n  -d, --detached             run immudb in background\n      --dir string           data folder (default "./db")\n  -h, --help                 help for immudb\n      --logfile string       log path with filename. E.g. /tmp/immudb/immudb.log\n  -m, --mtls                 enable mutual tls\n      --no-histograms        disable collection of histogram metrics like query durations\n      --pidfile string       pid path with filename. E.g. /var/run/immudb.pid\n      --pkey string          server private key path (default "./tools/mtls/3_application/private/localhost.key.pem")\n  -p, --port int             port number (default 3322)\n\nUse "immudb [command] --help" for more information about a command.\n\n')])])]),a("h4",{attrs:{id:"immugw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immugw"}},[e._v("#")]),e._v(" immugw")]),e._v(" "),a("p",[e._v("Simply run "),a("code",[e._v("./immugw -d")]),e._v(" to start immugw on the same machine as immudb (test or dev environment) or pointing to the remote immudb system "),a("code",[e._v('./immugw --immudbaddress "immudb-server"')]),e._v(".")]),e._v(" "),a("p",[e._v("If you want to stop immugw în that case you need to find the process "),a("code",[e._v("ps -ax | grep immugw")]),e._v(" and then "),a("code",[e._v("kill -15 <pid>")]),e._v(". Windows PowerShell would be "),a("code",[e._v("Get-Process immugw* | Stop-Process")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('immu gateway: a smart REST proxy for immudb - the lightweight, high-speed immutable database for systems and applications.\nIt exposes all gRPC methods with a REST interface while wrapping all SAFE endpoints with a verification service.\n\nEnvironment variables:\n  IMMUGW_ADDRESS=127.0.0.1\n  IMMUGW_PORT=3323\n  IMMUGW_IMMUDB-ADDRESS=127.0.0.1\n  IMMUGW_IMMUDB-PORT=3322\n  IMMUGW_DIR=.\n  IMMUGW_PIDFILE=\n  IMMUGW_LOGFILE=\n  IMMUGW_DETACHED=false\n  IMMUGW_MTLS=false\n  IMMUGW_SERVERNAME=localhost\n  IMMUGW_PKEY=./tools/mtls/4_client/private/localhost.key.pem\n  IMMUGW_CERTIFICATE=./tools/mtls/4_client/certs/localhost.cert.pem\n  IMMUGW_CLIENTCAS=./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immugw [flags]\n  immugw [command]\n\nAvailable Commands:\n  help        Help about any command\n  version     Show the immugw version\n\nFlags:\n  -a, --address string          immugw host address (default "127.0.0.1")\n      --certificate string      server certificate file path (default "./tools/mtls/4_client/certs/localhost.cert.pem")\n      --clientcas string        clients certificates list. Aka certificate authority (default "./tools/mtls/2_intermediate/certs/ca-chain.cert.pem")\n      --config string           config file (default path are configs or $HOME. Default filename is immugw.toml)\n  -d, --detached                run immudb in background\n      --dir string              program files folder (default ".")\n  -h, --help                    help for immugw\n  -k, --immudb-address string   immudb host address (default "127.0.0.1")\n  -j, --immudb-port int         immudb port number (default 3322)\n      --logfile string          log path with filename. E.g. /tmp/immugw/immugw.log\n  -m, --mtls                    enable mutual tls\n      --pidfile string          pid path with filename. E.g. /var/run/immugw.pid\n      --pkey string             server private key path (default "./tools/mtls/4_client/private/localhost.key.pem")\n  -p, --port int                immugw port number (default 3323)\n      --servername string       used to verify the hostname on the returned certificates (default "localhost")\n\nUse "immugw [command] --help" for more information about a command.\n\n\n')])])]),a("h4",{attrs:{id:"immuadmin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immuadmin"}},[e._v("#")]),e._v(" immuadmin")]),e._v(" "),a("p",[e._v("For security reasons we recommend using immuadmin only on the same system as immudb. User management is restricted to localhost usage. Simply run "),a("code",[e._v("./immuadmin")]),e._v(" on the same machine.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CLI admin client for immudb - the lightweight, high-speed immutable database for systems and applications.\n\nEnvironment variables:\n  IMMUADMIN_IMMUDB-ADDRESS=127.0.0.1\n  IMMUADMIN_IMMUDB-PORT=3322\n  IMMUADMIN_MTLS=true\n  IMMUADMIN_SERVERNAME=localhost\n  IMMUADMIN_PKEY=./tools/mtls/4_client/private/localhost.key.pem\n  IMMUADMIN_CERTIFICATE=./tools/mtls/4_client/certs/localhost.cert.pem\n  IMMUADMIN_CLIENTCAS=./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immuadmin [command]\n\nAvailable Commands:\n  backup      Make a copy of the database files and folders\n  dump        Dump database content to a file\n  help        Help about any command\n  login       Login using the specified username and password (admin username is immu)\n  logout\n  restore     Restore the database from a snapshot archive or folder\n  service     Manage immu services\n  set         Update server config items: auth (none|password|cryptosig), mtls (true|false)\n  stats       Show statistics as text or visually with the \'-v\' option. Run \'immuadmin stats -h\' for details.\n  status      Show heartbeat status\n  user        Perform various user-related operations: list, create, delete, change password\n  version     Show the immuadmin version\n\nFlags:\n      --certificate string      server certificate file path (default "./tools/mtls/4_client/certs/localhost.cert.pem")\n      --clientcas string        clients certificates list. Aka certificate authority (default "./tools/mtls/2_intermediate/certs/ca-chain.cert.pem")\n      --config string           config file (default path is configs or $HOME; default filename is immuadmin.toml)\n  -h, --help                    help for immuadmin\n  -a, --immudb-address string   immudb host address (default "127.0.0.1")\n  -p, --immudb-port int         immudb port number (default 3322)\n  -m, --mtls                    enable mutual tls\n      --pkey string             server private key path (default "./tools/mtls/4_client/private/localhost.key.pem")\n      --servername string       used to verify the hostname on the returned certificates (default "localhost")\n      --tokenfile string        authentication token file (default path is $HOME or binary location; the supplied value will be automatically suffixed with _admin; default filename is token_admin) (default "token")\n\nUse "immuadmin [command] --help" for more information about a command.\n\n')])])]),a("h4",{attrs:{id:"immuclient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immuclient"}},[e._v("#")]),e._v(" immuclient")]),e._v(" "),a("p",[e._v("Simply run "),a("code",[e._v("./immuclient")]),e._v(" on the same machine or "),a("code",[e._v("./immuclient -a <immudb-host>")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CLI client for immudb - the lightweight, high-speed immutable database for systems and applications.\nEnvironment variables:\n  IMMUCLIENT_IMMUDB-ADDRESS=127.0.0.1\n  IMMUCLIENT_IMMUDB-PORT=3322\n  IMMUCLIENT_AUTH=false\n  IMMUCLIENT_MTLS=false\n  IMMUCLIENT_SERVERNAME=localhost\n  IMMUCLIENT_PKEY=./tools/mtls/4_client/private/localhost.key.pem\n  IMMUCLIENT_CERTIFICATE=./tools/mtls/4_client/certs/localhost.cert.pem\n  IMMUCLIENT_CLIENTCAS=./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immuclient [command]\n\nAvailable Commands:\n  check-consistency Check consistency for the specified index and hash\n  count             Count keys having the specified prefix\n  current           Return the last merkle tree root and index stored locally\n  get               Get item having the specified key\n  getByIndex        Return an element by index\n  help              Help about any command\n  history           Fetch history for the item having the specified key\n  inclusion         Check if specified index is included in the current tree\n  iscan             Iterate over all elements by insertion order\n  login             Login using the specified username and password\n  logout\n  rawsafeget        Get item having the specified key, without parsing structured values\n  rawsafeset        Set a value for the item having the specified key, without setup structured values\n  reference         Add new reference to an existing key\n  safeget           Get and verify item having the specified key\n  safereference     Add and verify new reference to an existing key\n  safeset           Add and verify new item having the specified key and value\n  safezadd          Add and verify new key with score to a new or existing sorted set\n  scan              Iterate over keys having the specified prefix\n  set               Add new item having the specified key and value\n  status            Ping to check if server connection is alive\n  version           Show the immuclient version\n  zadd              Add new key with score to a new or existing sorted set\n  zscan             Iterate over a sorted set\n\nFlags:\n      --certificate string      server certificate file path (default "./tools/mtls/4_client/certs/localhost.cert.pem")\n      --clientcas string        clients certificates list. Aka certificate authority (default "./tools/mtls/2_intermediate/certs/ca-chain.cert.pem")\n      --config string           config file (default path are configs or $HOME. Default filename is immuclient.toml)\n  -h, --help                    help for immuclient\n  -a, --immudb-address string   immudb host address (default "127.0.0.1")\n  -p, --immudb-port int         immudb port number (default 3322)\n  -m, --mtls                    enable mutual tls\n      --pkey string             server private key path (default "./tools/mtls/4_client/private/localhost.key.pem")\n      --servername string       used to verify the hostname on the returned certificates (default "localhost")\n      --tokenfile string        authentication token file (default path is $HOME or binary location; default filename is token) (default "token")\n      --value-only              returning only values for get operations\n\nUse "immuclient [command] --help" for more information about a command.\n\n')])])]),a("h3",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" Docker")]),e._v(" "),a("p",[e._v("All services and cli components are also available as docker images on dockerhub.com.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Component")]),e._v(" "),a("th",[e._v("Container image")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("immudb")]),e._v(" "),a("td",[e._v("https://hub.docker.com/r/codenotary/immudb")])]),e._v(" "),a("tr",[a("td",[e._v("immugw")]),e._v(" "),a("td",[e._v("https://hub.docker.com/r/codenotary/immugw")])]),e._v(" "),a("tr",[a("td",[e._v("immuadmin")]),e._v(" "),a("td",[e._v("https://hub.docker.com/r/codenotary/immuadmin")])]),e._v(" "),a("tr",[a("td",[e._v("immuclient")]),e._v(" "),a("td",[e._v("https://hub.docker.com/r/codenotary/immuclient")])])])]),e._v(" "),a("h4",{attrs:{id:"run-immudb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb"}},[e._v("#")]),e._v(" Run immudb")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("docker run -it -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3322")]),e._v(":3322 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9497")]),e._v(":9497 --name immudb codenotary/immudb:latest\n")])])]),a("h4",{attrs:{id:"run-immugw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw"}},[e._v("#")]),e._v(" Run immugw")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -it -d -p 3323:3323 --name immugw --env IMMUGW_IMMUDB-ADDRESS=immudb codenotary/immugw:latest\n")])])]),a("h4",{attrs:{id:"run-immuadmin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immuadmin"}},[e._v("#")]),e._v(" Run immuadmin")]),e._v(" "),a("p",[e._v("You can either find immuadmin in the immudb container (/usr/local/bin/immuadmin) or run the docker container to connect to the local immudb.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -it --rm --name immuadmin codenotary/immuadmin:latest status\n")])])]),a("h4",{attrs:{id:"run-immuclient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-immuclient"}},[e._v("#")]),e._v(" Run immuclient")]),e._v(" "),a("p",[e._v("You can either find immuclient in the immudb container (/usr/local/bin/immuclient) or run the docker container to connect to the local or remote immudb.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -it --rm --name immuclient codenotary/immuclient:latest -a <immudb-host>\n")])])]),a("h4",{attrs:{id:"build-the-container-images-yourself"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-the-container-images-yourself"}},[e._v("#")]),e._v(" Build the container images yourself")]),e._v(" "),a("p",[e._v("If you want to build the container images yourself, simply clone this repo and run")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker build -t myown/immudb:latest -f Dockerfile .\ndocker build -t myown/immugw:latest -f Dockerfile.immugw .\ndocker build -t myown/immuadmin:latest -f Dockerfile.immuadmin .\ndocker build -t myown/immuclient:latest -f Dockerfile.immuclient .\n")])])]),a("h2",{attrs:{id:"how-immudb-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-immudb-works"}},[e._v("#")]),e._v(" How immudb works")]),e._v(" "),a("h3",{attrs:{id:"adding-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-data"}},[e._v("#")]),e._v(" adding data")]),e._v(" "),a("p",[e._v("When adding data the merkle tree changes as well as shown in the diagram")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-adding-data-diagram.png",alt:"the merkle tree changes with every new data"}})]),e._v(" "),a("h3",{attrs:{id:"checking-data-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checking-data-consistency"}},[e._v("#")]),e._v(" checking data consistency")]),e._v(" "),a("p",[e._v("The following diagram explains how data is inserted, verified and consistency checked.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-consistency-diagram.png",alt:"How immudb data consistency works"}})]),e._v(" "),a("h3",{attrs:{id:"immugw-communication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immugw-communication"}},[e._v("#")]),e._v(" immugw communication")]),e._v(" "),a("p",[e._v("immugw proxies REST client communication and gRPC server interface. For security purposes immugw should not run on the same server as immudb. The following diagram shows how the communication works:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/codenotary/immudb/blob/master/img/immugw-diagram.png",alt:"immugw communication explained"}})]),e._v(" "),a("h2",{attrs:{id:"apis-and-interfaces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apis-and-interfaces"}},[e._v("#")]),e._v(" APIs and interfaces")]),e._v(" "),a("h3",{attrs:{id:"golang-immudb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#golang-immudb"}},[e._v("#")]),e._v(" Golang immudb")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/immudb/immudb-golang.html"}},[e._v("Golang code snippets")])],1),e._v(" "),a("h3",{attrs:{id:"curl-examples-immugw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-examples-immugw"}},[e._v("#")]),e._v(" Curl examples immugw")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/docs/immugw/immugw-curl.html"}},[e._v("Curl code snippets")])],1),e._v(" "),a("h3",{attrs:{id:"immudb-restful-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immudb-restful-api-reference"}},[e._v("#")]),e._v(" immudb RESTful API reference")]),e._v(" "),a("p",[e._v("You can find the swagger schema here:")]),e._v(" "),a("p",[e._v("https://github.com/codenotary/immudb/blob/master/pkg/api/schema/schema.swagger.json")]),e._v(" "),a("p",[e._v("If you want to run the Swagger UI, simply run the following docker command after you cloned this repo:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -d -it -p 8080:8080 --name swagger-immudb -v ${PWD}/pkg/api/schema/schema.swagger.json:/openapi.json -e SWAGGER_JSON=/openapi.json  swaggerapi/swagger-ui\n")])])]),a("h3",{attrs:{id:"immudb-grpc-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immudb-grpc-api-reference"}},[e._v("#")]),e._v(" immudb gRPC API reference")]),e._v(" "),a("p",[e._v("coming soon")]),e._v(" "),a("h3",{attrs:{id:"immugw-restful-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immugw-restful-api-reference"}},[e._v("#")]),e._v(" immugw RESTful API reference")]),e._v(" "),a("p",[e._v("You can find the swagger schema here:")]),e._v(" "),a("p",[e._v("https://github.com/codenotary/immudb/blob/master/pkg/api/schema/gw.schema.swagger.json")]),e._v(" "),a("p",[e._v("If you want to run the Swagger UI, simply run the following docker command after you cloned this repo:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -d -it -p 8081:8080 --name swagger-immugw -v ${PWD}/pkg/api/schema/gw.schema.swagger.json:/openapi.json -e SWAGGER_JSON=/openapi.json  swaggerapi/swagger-ui\n")])])]),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" License")]),e._v(" "),a("p",[e._v("immudb is "),a("a",{attrs:{href:"LICENSE"}},[e._v("Apache v2.0 License")]),e._v(".")])])}),[],!1,null,null,null);t.default=n.exports}}]);