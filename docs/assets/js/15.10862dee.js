(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{366:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("immudb is a "),s("strong",[t._v("lightweight, high-speed immutable database")]),t._v(" for systems and applications, written in Go.\nWith immudb you can track changes in sensitive data in your transactional databases and then record those changes permanently in a\ntamperproof immudb database. This allows you to keep an indelible history of sensitive data, for example debit/credit card transactions.\n"),s("img",{attrs:{align:"right",src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-mascot-small.png",width:"256px"}})]),t._v(" "),s("p",[t._v("Traditional transaction logs are hard to scale and are mutable. So there is no way to know for sure if your data has been compromised.")]),t._v(" "),s("p",[t._v("As such, immudb provides "),s("strong",[t._v("unparalleled insights")]),t._v(" "),s("strong",[t._v("retroactively")]),t._v(" of changes to your sensitive data, even\nif your perimeter has been compromised. immudb guarantees immutability by using a "),s("strong",[t._v("Merkle tree structure")]),t._v(" internally.")]),t._v(" "),s("p",[t._v("immudb gives you the same "),s("strong",[t._v("cryptographic verification")]),t._v(" of the integrity of data written with "),s("strong",[t._v("SHA-256")]),t._v(" as a classic blockchain without the cost and complexity associated with blockchains today.")]),t._v(" "),s("p",[t._v("immudb has 4 main benefits:")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("immudb is immutable")]),t._v(". You can add records, but "),s("strong",[t._v("never change or delete records")]),t._v(".")]),t._v(" "),s("li",[t._v("Data stored in immudb is "),s("strong",[t._v("cryptographically coherent and verifiable")]),t._v(", like blockchains, just without all the complexity and at high speed.")]),t._v(" "),s("li",[t._v("Anyone can get "),s("strong",[t._v("started with immudb in minutes")]),t._v(". Whether you're using node.js, Java, Python, Golang, .Net, or any other language. It's very easy to use and you can have your immutable database running in just a few minutes.")]),t._v(" "),s("li",[t._v("Finally, immudb is  "),s("strong",[t._v("Open Source")]),t._v(". You can run it "),s("strong",[t._v("on premise")]),t._v(", or in the "),s("strong",[t._v("cloud")]),t._v(". It's completely free. immudb is governed by the Apache 2.0 License.")])]),t._v(" "),s("p",[t._v("immudb can be ran on "),s("strong",[t._v("Linux")]),t._v(", "),s("strong",[t._v("FreeBSD")]),t._v(", "),s("strong",[t._v("Windows")]),t._v(", and "),s("strong",[t._v("MacOS")]),t._v(", along with\nother systems derived from them, such as "),s("strong",[t._v("Kubernetes")]),t._v(" and "),s("strong",[t._v("Docker")]),t._v(".")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://twitter.com/intent/tweet?text=immudb:%20lightweight,%20high-speed%20immutable%20database!&url=https://github.com/codenotary/immudb",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Tweet%20about%20immudb",alt:"Tweet aboutimmudb!"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#quickstart"}},[t._v("Quickstart")]),t._v(" - How to try it now on your systems, get a Docker container running in seconds")]),t._v(" "),s("li",[s("a",{attrs:{href:"#components"}},[t._v("Components")]),t._v(" - immudb component overview")]),t._v(" "),s("li",[s("a",{attrs:{href:"#build-the-binaries"}},[t._v("Build the binaries")]),t._v(" - How to build the different component binaries")]),t._v(" "),s("li",[s("a",{attrs:{href:"#immudb-first-start"}},[t._v("immudb first start")]),t._v(" - Start immudb")]),t._v(" "),s("li",[s("a",{attrs:{href:"#command-reference"}},[t._v("Command reference")]),t._v(" - Command reference of the components")]),t._v(" "),s("li",[s("a",{attrs:{href:"#docker"}},[t._v("Docker")]),t._v(" - Use docker container to run immudb")]),t._v(" "),s("li",[s("a",{attrs:{href:"#how-immudb-works"}},[t._v("How immudb works")]),t._v(" - How does immudb work internally?")]),t._v(" "),s("li",[s("a",{attrs:{href:"#apis-and-interfaces"}},[t._v("APIs and interfaces")]),t._v(" - API reference and code examples")])]),t._v(" "),s("h2",{attrs:{id:"quickstart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quickstart"}},[t._v("#")]),t._v(" Quickstart")]),t._v(" "),s("h3",{attrs:{id:"components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#components"}},[t._v("#")]),t._v(" Components")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("immudb")]),t._v(" is the server binary that listens on port 3322 on localhost and provides a gRPC interface")]),t._v(" "),s("li",[s("strong",[t._v("immugw")]),t._v(" is the intelligent REST proxy that connects to immudb and provides a RESTful interface for applications. We recommend to run immudb and immugw on separate machines to enhance security")]),t._v(" "),s("li",[s("strong",[t._v("immuadmin")]),t._v(" is the admin CLI for immudb and immugw. You can install and manage the service installation for both components and get statistics as well as runtime information.")]),t._v(" "),s("li",[s("strong",[t._v("immuclient")]),t._v(" is the CLI client for immudb. You can read, write data into immudb from the commandline using direct or interactive mode.")])]),t._v(" "),s("p",[t._v("The latest release binaries can be found "),s("a",{attrs:{href:"https://github.com/codenotary/immudb/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"build-the-binaries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-the-binaries"}},[t._v("#")]),t._v(" Build the binaries")]),t._v(" "),s("p",[t._v("To build the binaries yourself, simply clone this repo and run")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" all\n")])])]),s("h4",{attrs:{id:"linux-by-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-by-component"}},[t._v("#")]),t._v(" Linux (by component)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),s("h4",{attrs:{id:"macos-by-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos-by-component"}},[t._v("#")]),t._v(" MacOS (by component)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("darwin "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),s("h4",{attrs:{id:"windows-by-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-by-component"}},[t._v("#")]),t._v(" Windows (by component)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immuclient-static immuadmin-static immudb-static immugw-static\n")])])]),s("h3",{attrs:{id:"immudb-first-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb-first-start"}},[t._v("#")]),t._v(" immudb first start")]),t._v(" "),s("h4",{attrs:{id:"run-immudb-binary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb-binary"}},[t._v("#")]),t._v(" Run immudb binary")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# run immudb in the foreground")]),t._v("\n./immudb\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# run immudb in the background")]),t._v("\n./immudb -d\n")])])]),s("h4",{attrs:{id:"run-immudb-as-a-service-using-immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb-as-a-service-using-immuadmin"}},[t._v("#")]),t._v(" Run immudb as a service (using immuadmin)")]),t._v(" "),s("p",[t._v("Please make sure to build or download the immudb and immuadmin component and save them in the same work directory when installing the service.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install immudb service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check current immudb service status")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immudb status\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stop immudb service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immudb stop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start immudb service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immudb start\n")])])]),s("p",[t._v("The linux service is using the following defaults:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("File or configuration")]),t._v(" "),s("th",[t._v("location")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("all configuration files")]),t._v(" "),s("td",[t._v("/etc/immudb")])]),t._v(" "),s("tr",[s("td",[t._v("all data files")]),t._v(" "),s("td",[t._v("/var/lib/immudb")])]),t._v(" "),s("tr",[s("td",[t._v("pid file")]),t._v(" "),s("td",[t._v("/var/run/immudb.pid")])]),t._v(" "),s("tr",[s("td",[t._v("log files")]),t._v(" "),s("td",[t._v("/var/log/immudb")])])])]),t._v(" "),s("h4",{attrs:{id:"run-immugw-as-a-service-using-immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw-as-a-service-using-immuadmin"}},[t._v("#")]),t._v(" Run immugw as a service (using immuadmin)")]),t._v(" "),s("p",[t._v("Please make sure to build or download the immugw and immuadmin component and save them in the same work directory when installing the service.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install immugw service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immugw "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check current immugw service status")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immugw status\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stop immugw service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immugw stop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start immugw service")]),t._v("\n./immuadmin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" immugw start\n")])])]),s("p",[t._v("The linux service is using the following defaults:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("File or configuration")]),t._v(" "),s("th",[t._v("location")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("all configuration files")]),t._v(" "),s("td",[t._v("/etc/immudb")])]),t._v(" "),s("tr",[s("td",[t._v("pid file")]),t._v(" "),s("td",[t._v("/var/run/immugw.pid")])]),t._v(" "),s("tr",[s("td",[t._v("log files")]),t._v(" "),s("td",[t._v("/var/log/immudb")])])])]),t._v(" "),s("h3",{attrs:{id:"command-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#command-reference"}},[t._v("#")]),t._v(" Command reference")]),t._v(" "),s("h4",{attrs:{id:"immudb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb"}},[t._v("#")]),t._v(" immudb")]),t._v(" "),s("p",[t._v("Simply run "),s("code",[t._v("./immudb -d")]),t._v(" to start immudb locally in the background.")]),t._v(" "),s("p",[t._v("If you want to stop immudb în that case you need to find the process "),s("code",[t._v("ps -ax | grep immudb")]),t._v(" and then "),s("code",[t._v("kill -15 <pid>")]),t._v(". Windows PowerShell would be "),s("code",[t._v("Get-Process immudb* | Stop-Process")]),t._v(".")]),t._v(" "),s("p",[t._v("immudb is launched by default with a security routine called "),s("RouterLink",{attrs:{to:"/docs/immudb/consistency-checker.html"}},[t._v("consistency checker")]),t._v(" . This solution provides a continuous corruption check on data stored on server storage.")],1),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("immudb - the lightweight, high-speed immutable database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\n\nEnvironment variables:\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_NETWORK")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DBNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("immudb\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PIDFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_LOGFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_AUTH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DETACHED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  IMMUDB_CONSISTENCY-CHECK"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/3_application/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/3_application/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immudb "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immudb "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  version     Show the immudb version\n\nFlags:\n  -a, --address string       "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("bind")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -s, --auth                 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" auth\n      --certificate string   server certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/3_application/certs/localhost.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string     clients certificates list. Aka certificate authority "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string        config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immudb.ini"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --consistency-check    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" consistency check monitor routine. To disable: --consistency-check"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -n, --dbname string        db name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immudb"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --detached             run immudb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" background\n      --dir string           data folder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./db"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb\n      --logfile string       log path with filename. E.g. /tmp/immudb/immudb.log\n  -m, --mtls                 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --no-histograms        disable collection of histogram metrics like query durations\n      --pidfile string       pid path with filename. E.g. /var/run/immudb.pid\n      --pkey string          server private key path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/3_application/private/localhost.key.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --port int             port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immudb [command] --help"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n\n")])])]),s("h4",{attrs:{id:"immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw"}},[t._v("#")]),t._v(" immugw")]),t._v(" "),s("p",[t._v("Simply run "),s("code",[t._v("./immugw -d")]),t._v(" to start immugw on the same machine as immudb (test or dev environment) or point to the remote immudb system "),s("code",[t._v('./immugw --immudbaddress "immudb-server"')]),t._v(".")]),t._v(" "),s("p",[t._v("If you want to stop immugw în that case you need to find the process "),s("code",[t._v("ps -ax | grep immugw")]),t._v(" and then "),s("code",[t._v("kill -15 <pid>")]),t._v(". Windows PowerShell would be "),s("code",[t._v("Get-Process immugw* | Stop-Process")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("immu gateway: a smart REST proxy "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\nIt exposes all gRPC methods with a REST interface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" wrapping all SAFE endpoints with a verification service.\n\nEnvironment variables:\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),t._v("\n  IMMUGW_IMMUDB-ADDRESS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  IMMUGW_IMMUDB-PORT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PIDFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_LOGFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DETACHED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immugw "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immugw "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  version     Show the immugw version\n\nFlags:\n  -a, --address string          immugw "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --certificate string      server certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string        clients certificates list. Aka certificate authority "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string           config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immugw.toml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --detached                run immudb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" background\n      --dir string              program files folder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immugw\n  -k, --immudb-address string   immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -j, --immudb-port int         immudb port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --logfile string          log path with filename. E.g. /tmp/immugw/immugw.log\n  -m, --mtls                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pidfile string          pid path with filename. E.g. /var/run/immugw.pid\n      --pkey string             server private key path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --port int                immugw port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string       used to verify the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immugw [command] --help"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n\n\n")])])]),s("h4",{attrs:{id:"immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immuadmin"}},[t._v("#")]),t._v(" immuadmin")]),t._v(" "),s("p",[t._v("For security reasons we recommend using immuadmin only on the same system as immudb. User management is restricted to localhost usage. Simply run "),s("code",[t._v("./immuadmin")]),t._v(" on the same machine.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("CLI admin client "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\n\nEnvironment variables:\n  IMMUADMIN_IMMUDB-ADDRESS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  IMMUADMIN_IMMUDB-PORT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immuadmin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  backup      Make a copy of the database files and folders\n  dump        Dump database content to a "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  login       Login using the specified username and password "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("admin username is immu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("\n  restore     Restore the database from a snapshot archive or folder\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("     Manage immu services\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("         Update server config items: auth "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cryptosig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", mtls "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  stats       Show statistics as text or visually with the "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-v'")]),t._v(" option. Run "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immuadmin stats -h'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details.\n  status      Show heartbeat status\n  user        Perform various user-related operations: list, create, delete, change password\n  version     Show the immuadmin version\n\nFlags:\n      --certificate string      server certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string        clients certificates list. Aka certificate authority "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string           config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is configs or "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is immuadmin.toml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immuadmin\n  -a, --immudb-address string   immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --immudb-port int         immudb port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -m, --mtls                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pkey string             server private key path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string       used to verify the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --tokenfile string        authentication token "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v(" or binary location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" the supplied value will be automatically suffixed with _admin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is token_admin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immuadmin [command] --help"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n\n")])])]),s("h4",{attrs:{id:"immuclient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immuclient"}},[t._v("#")]),t._v(" immuclient")]),t._v(" "),s("p",[t._v("Simply run "),s("code",[t._v("./immuclient")]),t._v(" on the same machine or connect to a remote immudb "),s("code",[t._v("./immuclient -a <immudb-host>")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("CLI client "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\nEnvironment variables:\n  IMMUCLIENT_IMMUDB-ADDRESS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  IMMUCLIENT_IMMUDB-PORT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_AUTH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immuclient "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  check-consistency Check consistency "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the specified index and "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v("\n  count             Count keys having the specified prefix\n  current           Return the last merkle tree root and index stored locally\n  get               Get item having the specified key\n  getByIndex        Return an element by index\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("              Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v("           Fetch "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the item having the specified key\n  inclusion         Check "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" specified index is included "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the current tree\n  iscan             Iterate over all elements by insertion order\n  login             Login using the specified username and password\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("\n  rawsafeget        Get item having the specified key, without parsing structured values\n  rawsafeset        Set a value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the item having the specified key, without setup structured values\n  reference         Add new reference to an existing key\n  safeget           Get and verify item having the specified key\n  safereference     Add and verify new reference to an existing key\n  safeset           Add and verify new item having the specified key and value\n  safezadd          Add and verify new key with score to a new or existing sorted "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n  scan              Iterate over keys having the specified prefix\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("               Add new item having the specified key and value\n  status            Ping to check "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server connection is alive\n  version           Show the immuclient version\n  zadd              Add new key with score to a new or existing sorted "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n  zscan             Iterate over a sorted "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n\nFlags:\n      --certificate string      server certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string        clients certificates list. Aka certificate authority "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string           config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immuclient.toml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immuclient\n  -a, --immudb-address string   immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --immudb-port int         immudb port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -m, --mtls                    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pkey string             server private key path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string       used to verify the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --tokenfile string        authentication token "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v(" or binary location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --value-only              returning only values "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" get operations\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immuclient [command] --help"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n")])])]),s("h3",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),s("p",[t._v("All services and CLI components are also available as Docker images on "),s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dockerhub"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Component")]),t._v(" "),s("th",[t._v("Container image")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("immudb")]),t._v(" "),s("td",[t._v("https://hub.docker.com/r/codenotary/immudb")])]),t._v(" "),s("tr",[s("td",[t._v("immugw")]),t._v(" "),s("td",[t._v("https://hub.docker.com/r/codenotary/immugw")])]),t._v(" "),s("tr",[s("td",[t._v("immuadmin")]),t._v(" "),s("td",[t._v("https://hub.docker.com/r/codenotary/immuadmin")])]),t._v(" "),s("tr",[s("td",[t._v("immuclient")]),t._v(" "),s("td",[t._v("https://hub.docker.com/r/codenotary/immuclient")])])])]),t._v(" "),s("h4",{attrs:{id:"run-immudb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb"}},[t._v("#")]),t._v(" Run immudb")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -it -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v(":3322 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9497")]),t._v(":9497 --name immudb codenotary/immudb:latest\n")])])]),s("h4",{attrs:{id:"run-immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw"}},[t._v("#")]),t._v(" Run immugw")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -it -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),t._v(":3323 --name immugw --env IMMUGW_IMMUDB-ADDRESS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("immudb codenotary/immugw:latest\n")])])]),s("h4",{attrs:{id:"run-immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immuadmin"}},[t._v("#")]),t._v(" Run immuadmin")]),t._v(" "),s("p",[t._v("You can either find immuadmin in the immudb container (/usr/local/bin/immuadmin) or run the Docker container to connect to the local immudb.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -it --rm --name immuadmin codenotary/immuadmin:latest status\n")])])]),s("h4",{attrs:{id:"run-immuclient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immuclient"}},[t._v("#")]),t._v(" Run immuclient")]),t._v(" "),s("p",[t._v("You can either find immuclient in the immudb container (/usr/local/bin/immuclient) or run the Docker container to connect to the local or remote immudb.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -it --rm --name immuclient codenotary/immuclient:latest -a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("immudb-host"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h4",{attrs:{id:"build-the-container-images-yourself"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-the-container-images-yourself"}},[t._v("#")]),t._v(" Build the container images yourself")]),t._v(" "),s("p",[t._v("If you want to build the container images yourself, simply clone this repo and run:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker build -t myown/immudb:latest -f Dockerfile "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker build -t myown/immugw:latest -f Dockerfile.immugw "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker build -t myown/immuadmin:latest -f Dockerfile.immuadmin "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker build -t myown/immuclient:latest -f Dockerfile.immuclient "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("h2",{attrs:{id:"how-immudb-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-immudb-works"}},[t._v("#")]),t._v(" How immudb works")]),t._v(" "),s("h3",{attrs:{id:"adding-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-data"}},[t._v("#")]),t._v(" Adding data")]),t._v(" "),s("p",[t._v("When adding data, the Merkle tree changes as well, as shown in the diagram.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-adding-data-diagram.png",alt:"the merkle tree changes with every new data"}})]),t._v(" "),s("h3",{attrs:{id:"checking-data-consistency"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checking-data-consistency"}},[t._v("#")]),t._v(" Checking data consistency")]),t._v(" "),s("p",[t._v("The following diagram explains how data is inserted, verified and consistency checked.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immudb-consistency-diagram.png",alt:"How immudb data consistency works"}})]),t._v(" "),s("h3",{attrs:{id:"immugw-communication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-communication"}},[t._v("#")]),t._v(" immugw communication")]),t._v(" "),s("p",[t._v("immugw proxies REST client communication and gRPC server interface. For security purposes, immugw should not run on the same server as immudb. The following diagram shows how the communication works:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/codenotary/immudb/master/img/immugw-diagram.png",alt:"immugw communication explained"}})]),t._v(" "),s("h2",{attrs:{id:"apis-and-interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apis-and-interfaces"}},[t._v("#")]),t._v(" APIs and interfaces")]),t._v(" "),s("h3",{attrs:{id:"golang-immudb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#golang-immudb"}},[t._v("#")]),t._v(" Golang immudb")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/docs/immudb/introduction.html"}},[t._v("Golang code snippets")])],1),t._v(" "),s("h3",{attrs:{id:"curl-examples-immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#curl-examples-immugw"}},[t._v("#")]),t._v(" Curl examples immugw")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/docs/immugw/introduction.html"}},[t._v("Curl code snippets")])],1),t._v(" "),s("h3",{attrs:{id:"immudb-restful-api-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb-restful-api-reference"}},[t._v("#")]),t._v(" immudb RESTful API reference")]),t._v(" "),s("p",[t._v("You can find the swagger schema here:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/codenotary/immudb/blob/master/pkg/api/schema/schema.swagger.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("swagger immudb"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("If you want to run the Swagger UI, simply run the following Docker command after you cloned this repo:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -d -it -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 --name swagger-immudb -v "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PWD")]),t._v("}")]),t._v("/pkg/api/schema/schema.swagger.json:/openapi.json -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SWAGGER_JSON")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/openapi.json  swaggerapi/swagger-ui\n")])])]),s("h3",{attrs:{id:"immudb-grpc-api-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb-grpc-api-reference"}},[t._v("#")]),t._v(" immudb gRPC API reference")]),t._v(" "),s("p",[t._v("coming soon")]),t._v(" "),s("h3",{attrs:{id:"immugw-restful-api-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-restful-api-reference"}},[t._v("#")]),t._v(" immugw RESTful API reference")]),t._v(" "),s("p",[t._v("You can find the swagger schema here:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/codenotary/immudb/blob/master/pkg/api/schema/gw.schema.swagger.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("swagger immudb"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("If you want to run the Swagger UI, simply run the following Docker command after you cloned this repo:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run -d -it -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8080 --name swagger-immugw -v "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PWD")]),t._v("}")]),t._v("/pkg/api/schema/gw.schema.swagger.json:/openapi.json -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SWAGGER_JSON")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/openapi.json  swaggerapi/swagger-ui\n")])])]),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("p",[t._v("immudb is "),s("a",{attrs:{href:"LICENSE"}},[t._v("Apache v2.0 License")]),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);