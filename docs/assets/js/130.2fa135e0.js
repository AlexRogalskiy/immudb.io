(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{551:function(e,a,t){"use strict";t.r(a);var n=t(10),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"sql-operations-with-immuclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-operations-with-immuclient"}},[e._v("#")]),e._v(" SQL operations with immuclient")]),e._v(" "),t("p",[e._v("In addition to a key-value store, immudb supports the relational model (SQL). For example, to a table:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('immuclient exec "CREATE TABLE people(id INTEGER, name VARCHAR, salary INTEGER, PRIMARY KEY id);"\nsql ok, Ctxs: 1 Dtxs: 0\n')])])]),t("p",[e._v("To insert data, use "),t("code",[e._v("UPSERT")]),e._v(" (insert or update), which will add an entry, or overwrite it if already exists (based on the primary key):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("immuclient exec \"UPSERT INTO people(id, name, salary) VALUES (1, 'Joe', 10000);\"\nsql ok, Ctxs: 0 Dtxs: 1\nimmuclient exec \"UPSERT INTO people(id, name, salary) VALUES (2, 'Bob', 30000);\"\nsql ok, Ctxs: 0 Dtxs: 1\n")])])]),t("p",[e._v("To query the data you can use the traditional "),t("code",[e._v("SELECT")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('immuclient query "SELECT id, name, salary FROM people;"\n+-----------------------+-------------------------+---------------------------+\n| (DEFAULTDB PEOPLE ID) | (DEFAULTDB PEOPLE NAME) | (DEFAULTDB PEOPLE SALARY) |\n+-----------------------+-------------------------+---------------------------+\n|                     1 | Joe                     |                     10000 |\n|                     2 | Bob                     |                     30000 |\n+-----------------------+-------------------------+---------------------------+\n')])])]),t("p",[e._v('If we upsert again on the primary key "1", the value for "Joe" will be overwriten:')]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('immuclient exec "UPSERT INTO people(id, name, salary) VALUES (1, \'Joe\', 20000);"\nsql ok, Ctxs: 0 Dtxs: 1\n\nimmuclient query "SELECT id, name, salary FROM people;"\n+-----------------------+-------------------------+---------------------------+\n| (DEFAULTDB PEOPLE ID) | (DEFAULTDB PEOPLE NAME) | (DEFAULTDB PEOPLE SALARY) |\n+-----------------------+-------------------------+---------------------------+\n|                     1 | Joe                     |                     20000 |\n|                     2 | Bob                     |                     30000 |\n+-----------------------+-------------------------+---------------------------+\n')])])]),t("h3",{attrs:{id:"time-travel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#time-travel"}},[e._v("#")]),e._v(" Time travel")]),e._v(" "),t("p",[e._v("Now, remember immudb is a immutable database. History is always preserved. With immudb you can travel in time!")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("immuclient query \"SELECT id, name, salary FROM people WHERE name='Joe';\"\n+-----------------------+-------------------------+---------------------------+\n| (DEFAULTDB PEOPLE ID) | (DEFAULTDB PEOPLE NAME) | (DEFAULTDB PEOPLE SALARY) |\n+-----------------------+-------------------------+---------------------------+\n|                     1 | Joe                     |                     20000 |\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("Eg. before the update:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("immuclient query \"SELECT id, name, salary FROM (people BEFORE TX 3) WHERE name='Joe';\"\n+-----------------------+-------------------------+---------------------------+\n| (DEFAULTDB PEOPLE ID) | (DEFAULTDB PEOPLE NAME) | (DEFAULTDB PEOPLE SALARY) |\n+-----------------------+-------------------------+---------------------------+\n|                     1 | Joe                     |                     10000 |\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("or even before the first time insert (guess what, it is empty!):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("immuclient query \"SELECT id, name, salary FROM (people BEFORE TX 1) WHERE name='Joe';\"\n+-----------------------+-------------------------+---------------------------+\n| (DEFAULTDB PEOPLE ID) | (DEFAULTDB PEOPLE NAME) | (DEFAULTDB PEOPLE SALARY) |\n+-----------------------+-------------------------+---------------------------+\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("You can even "),t("code",[e._v("TABLE")]),e._v(" a table with itself in the past. Imagine you want to see how people salary changed between two points in time:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('immuclient query "SELECT peoplenow.id, peoplenow.name, peoplethen.salary, peoplenow.salary FROM (people BEFORE TX 3 AS peoplethen) INNER JOIN (people AS peoplenow) ON peoplenow.id=peoplethen.id;"\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n| (DEFAULTDB PEOPLENOW ID) | (DEFAULTDB PEOPLENOW NAME) | (DEFAULTDB PEOPLETHEN SALARY) | (DEFAULTDB PEOPLENOW SALARY) |\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n|                        1 | Joe                        |                         10000 |                        20000 |\n|                        2 | Bob                        |                         30000 |                        30000 |\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n')])])])])}),[],!1,null,null,null);a.default=s.exports}}]);